 //toString()
arr =['ses','serr','ererere']
let x =arr.toString()
  console.log(arr)
 
//pop()
 arr =['ses','serr','ererere']
let x =arr.pop()  
console.log(arr)

// join()
 let  arr =['ses','serr','ererere']
  let x =arr.join('angular')
  console.log(x)

// concat()
  let arr =['ses','serr','ererere']
   stringsd = ['js','py']
  let joined = arr.concat(stringsd)
  console.log(joined)

// splice()
const  data =['ses','serr','ererere','angular','pipe','routing']
let z = data.splice(1)
console.log(z)

  let arr =[1,2,3,4,5,6,7,8,9,55,66,]
  let y = arr.splice(1,2,2,4)
 console.log(y)

// slice()
  let arr =[1,2,3,4,5,6,7,8,9,55,66,]
  let arr =['ses','serr','ererere','ng','spy','data']
  let y = arr.slice(2,4)
 console.log(y)


// flat()
 let se= ['sehu','data','ngs',['module','datas'],'angular']
 c = se.flat()
 console.log(c)
 let se= ['sehu','data','ngs',['module','datas',['react','dataChange']],'angular']
 c = se.flat(2)
 console.log(c)

// foreach()
 let z= ['ses','serr','ererere','ng','spy','data']
z.forEach((datas) => console.log(datas));

 let a = [1,2,3,4,4,5,5]
 let x = a.forEach((x) => console.log(x))



// double()
 let b= [1,2,3,44,55,6,7,8,9,]
 s = b.map((c) => c*2)
 console.log(s)

 // filter()
 let frameworks = [  
 {id:1 ,name:'angular',author:'google'},
   {id:2 ,name:'angular',author:'google'},
   {id:3 ,name:'react',author:'fb'} ,
   {id:4 ,name:'vue',author:'ms'},
 ];// x = frameworks.filter((f)=> f.author === 'fb')
 console.log(x)

 let c = frameworks.filter((n)=>n.author === 'google')
 console.log(c)

 let g = [1,12,2,3,3,4,4,4,4,45,6,7,,8,8,8,9
 
 ];
 x = g.filter((r) => r===9)
 console.log(x)


// reduce()
let g = [1,12,2,3,3,4,4,4,4,45,6,7,8,8,8,9,1]

 f = g.reduce((f,currentvalue)=> f + currentvalue,100)
 console.log(f)
let g = [1,12,2,3,3,4,4,4,4,45,6,7,8,8,8,9,1]
 f = g.reduce((f,currentvalue)=> f + currentvalue)
 console.log(f)





// some()
let g = [1,2,3,4,5,6,6,7]

 f = g.some((k)=> k<490)
 console.log(f)



// function isodd(element, index, array) {
//     return (element % 2 == 1);
// }
 
// function geeks() {
//     let arr = [7,7,7];
 
//     // check for odd number
//     let value = arr.every(isodd);
//     console.log(value);
// }
// geeks();

// every()
 let u = [5]
 y = u.every((p)=>p>7)
 console.log(y)
 let u = [1,2,3,4,5,6,7]
 y = u.every((p)=>p>7)
 console.log(y)



// find()
 let f = [  
   {name:'angular',author:6},
   {name:'angular',author:7},
   {name:'react',author:8} ,
   {name:'vue',author:9},
 ];
 u = f.find((d)=> d.name ==='angular')//satisfice only one condion
 console.log(u.author)

 let f = [  
   {name:'angular',author:6},
   {name:'angular',author:7},
   {name:'react',author:8} ,
   {name:'vue',author:9},
 ];
 u = f.findIndex((d)=> d.name ==='angular')//satisfice only one condion
 console.log(u)


// sort()
 let sort =[1,3,4,57,3,56,88,00,11]
 h = sort.sort()
 console.log(h)




let sort =[1,3,4,57,3,56,88,00,11]
 h = sort.sort((a,b)=>a-b)
 console.log(h)

let sorted =[1,3,4,57,3,56,88,00,11]
 he = sort.sort((a,b)=>b-a)
 console.log(he)

//filterMethod
let arr1=[1,2,3,4,5,6,7,8];

// Output : [2,4,6,8] --> filter only even numbers

y = arr1.filter((b)=> b>6)

console.log(y)
z = arr1.filter((b)=> b%2==0)

console.log(z)




t = arr1.filter((b)=> b%3==0)

console.log(t)

let filterData=[
  {
    "id": 1,
    "name": "one",
    "desc": "onlyOne"
  },
  {
    "id": 2,
    "name": "two",
    "desc": "onlyTwo"
  },
  {
    "id": 1,
    "name": "two",
    "desc": "onlyThree"
  },
  {
    "id": 2,
    "name": "two",
    "desc": "onlyFour"
  }
]

//Filter -->  id=2

// 1-method
y = filterData.filter((d)=> d.id===2 || name==='two')
// z = filterData.filter((u)=> u.desc === 'onlyFour')

// console.log(y)
// console.log(z)
// 2-method
// u = filterData.filter(u => u.id===4 || u.name==='two')
// console.log(u);//false
// 3-method
// x = filterData.filter(v => v.desc=== "onlyFour" || v.id===6);//x = filterData.filter(v => v.desc=== "onlyFour" && v.id===6)
// console.log(x)

// 4-method
// x = filterData.filter(b => b.id===2 && b.name=== 'ygyyu');//empty arry false
// console.log(x)

// 5-method
// c = filterData.filter(n => n.id==2 && n.desc ==="onlyFour" && n.name==='two')
// console.log(c)
// 6-method
// r = filterData.filter(n => n.id==4 && n.desc ==="onlyFour" && n.name==='two')
// console.log(r);//empty 
// 7-method
// w = filterData.filter(n => n.id==2 && n.desc ==="onlyThree" || n.name==='two')
// console.log(w)
// 8-method
// q = filterData.filter(n => n.id==8 || n.desc ==="onlyThree" || n.name==='see')
// console.log(q)
// 9-method
// i= filterData.filter(n => n.id==9 && n.desc ==="empty" || n.name==='cd')
// console.log(i);//false
// 10-method
// o = filterData.filter(n => n.id==1 && n.desc ==="onlyOne" || n.name==='one')
// console.log(o);//true
// Filter --> id=2 || name='two'













// Map-methodas
// 1-method
// c= filterData.map((b)=> b.id ===2 ||b. name==='one');//true
// console.log(c)
// 2-method
// z= filterData.map((b)=> b.id ===2 && name==='one');//false
// console.log(z)
// 3-method
// v= filterData.map((b)=> b.id === 4 || b.name==='one');//true
// console.log(v)
// 4-method

// r= filterData.map((b)=> b.id === 4 && b.name==='one' || b.desc==='fiveue');//alse
// console.log(r)
// 5-method

// t = filterData.map((b)=> b.id === 1&& b.name==='one' || b.desc==='fiveue');//true
// console.log(t)
// 5-method
// u= filterData.map((b)=> b.id === 6&&b.name==='frfr'&& b.desc === 'onlyFour');//false
// console.log(u)

// 6-method

//  u= filterData.map((b)=> b.id === 6&&b.name==='frfr'&& b.desc === 'onlyFour');//false
// console.log(u)



// 7-method



// 8-method



// 9-method




// var mx= filterData.map((item)=>{
//   if(item.id===2){
//     item.price=10;
//   return item;
// }else{
//    item.price=1099;
//   return item;
// }
  
// })

// console.log(mx)




//  const words = ['spary','data','resduce','gain','use' ,'user','ji']
//  x = words.filter(v => v.length>2)
//  console.log(x)


// let BigDataa =[ ]
// for(let i =0;i<filterData.id;i++){
//   if(filterData[i].id >1){
   
//   }
 
// }
//  console .log(BigDataa)

// const myArray = [-5, -4, 1, 3, 7, 12, 13,27,11, 31,15, 17, 21, 23, 25, 27, 30];

// function findPrime(item){

//   for (let x = 2; item > x; x++) {

//     if (item % x == 0) {

//       return false;

//     }

//   }

//   return item > 1;

// }

// console.log(myArray.filter(findPrime));

let sports = [{id:1,name:'cricket',team:'IND'},
            {id:2,name:'footBall',team:'PAK'},
            {id:3,name:'Kabadi',team:'us'},
            {id:4,name:'jump',team:'IND'},
           ]
// var k = sports.filter((c)=>c.name==='cricket')
// c= sports.filter((m)=>{
//   if(m.id===3){
//     m.data='winners';
//     return m;
//     }
//     else{
//        m.data='looser' ;
//        return m;
//                  };
// })
// console.log(c)
              
//  b =sports.map((x)=>{
//               if(x.id<3){
//               x.fee=100000;
//                 return x
//               }else{
//               x.fee=200;
//                 return x
//               }
//  })
          
//               console.log(b)
              
              
//  let sportsData =[];
//  for(i=0;i<sports.id,i++;);
//    {
//      if(sports[i].id>2){
//        sportsData.push(sports[i])
//      }
//    }
// console.log(sportsData)


// const string1 = "A string primitive";
// const string2 = 'Also a string primitive';
// const string3 = `Yet another string primitive`;
// console.log(string1,string2,string3 +'hello')

 data = "welocome"
//  x= data.slice(2,5)
//  console.log(x)
//   x= data.splice(2,5)
//  console.log(x)
//   x= data.map(x=>{
//     if(x.data){
//     x.newData ='to my home'
//     return data
//     }
//   })
//  console.log(x)
 
//  y = data.push(x=>x.data)
//  console.log(y)


